
#*******************************************************************************
# INPUTS.2D.HOTSPOT for regression testing
#*******************************************************************************

fabarray.mfiter_tile_size = 8 8 8

# Maximum number of coarse grid timesteps to be taken, if stop_time is
#  not reached first.
max_step 		= 20

#*******************************************************************************

# Turn heat diffusion on
ns.do_temp=1
ns.temp_cond_coef=1.e-7

# What to use for the refinement criterion
ns.do_tracer_ref = 0
ns.do_density_ref = 0
ns.do_vorticity_ref = 0
ns.do_temp_ref = 1

#*******************************************************************************

# Number of cells in each coordinate direction at the coarsest level
#amr.n_cell 		= 16 32
amr.n_cell 		= 32 64
#amr.n_cell 		= 64 128
amr.max_grid_size	= 32

#*******************************************************************************

# Maximum level (defaults to 0 for single level calculation)
amr.max_level		= 2 # maximum number of levels of refinement

#*******************************************************************************

# Interval (in number of level l timesteps) between regridding
amr.regrid_int		= 2 

#*******************************************************************************

# Refinement ratio as a function of level
amr.ref_ratio		= 2 2 2 2

#*******************************************************************************

# Sets the "NavierStokes" code to be verbose
ns.v                    = 1

#*******************************************************************************

# Sets the "amr" code to be verbose
amr.v                   = 1

#*******************************************************************************

# Interval (in number of coarse timesteps) between checkpoint(restart) files
amr.check_int		= 100

#*******************************************************************************

# Interval (in number of coarse timesteps) between plot files
amr.plot_int		= 100

#*******************************************************************************

# CFL number to be used in calculating the time step : dt = dx / max(velocity)
ns.cfl                  = 0.9  # CFL number used to set dt

#*******************************************************************************

# Factor by which the first time is shrunk relative to CFL constraint
ns.init_shrink          = 0.3  # factor which multiplies the very first time step

#*******************************************************************************

# Viscosity coefficient 
ns.variable_vel_visc = 1
ns.vel_visc_coef        = 0.001

#*******************************************************************************

# Diffusion coefficient for first scalar
ns.variable_scal_diff = 1
ns.scal_diff_coefs      = 0.001

#*******************************************************************************

# Forcing term defaults to  rho * abs(gravity) "down"
ns.gravity              = -9.8

#*******************************************************************************

# Name of the file which specifies problem-specific parameters (defaults to "probin")
amr.probin_file 	= probin.2d.hotspot

#*******************************************************************************

# Set to 0 if x-y coordinate system, set to 1 if r-z.
geometry.coord_sys   =  1

#*******************************************************************************

# Physical dimensions of the low end of the domain.
geometry.prob_lo     =  0. 0. 

# Physical dimensions of the high end of the domain.
geometry.prob_hi     =  1. 2. 

#*******************************************************************************

#Set to 1 if periodic in that direction
geometry.is_periodic =  0 0

#*******************************************************************************

# Boundary conditions on the low end of the domain.
ns.lo_bc             = 3 4  

# Boundary conditions on the high end of the domain.
ns.hi_bc             = 4 4  

# 0 = Interior/Periodic  3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

#*******************************************************************************

# Add vorticity to the variables in the plot files.
amr.derive_plot_vars    = mag_vort   diveru   avg_pressure

#*******************************************************************************

# to get past initial velocity projection
proj.use_mlmg_solver = 1